geom_line() +
geom_point()
summary(df.longestexecutions)
summary(df.longestexecutions)
head(df.longestexecutions)
df.longrendertaskcount <- df.longrender %>% count(tasks)
#count by hostname
df.longrendercount <- df.longrender %>% count(hostname)
df.longrender
df.longrendertaskcount <- df.longrender %>% count(taskId)
df.longrendertaskcount
filter(df.longrendertaskcount, n>1)
mean(df.longestexecutions$totalRenderTime)
arrange(df.longestexecutions, totalRenderTime)
ange(df.longestexecutions, desc(totalRenderTime))
arrange(df.longestexecutions, desc(totalRenderTime))
longrenderupper
df.longestexecutions
topquartile <- mean(df.longestexecutions$totalRenderTime) + sd(df.longestexecutions$totalRenderTime)
topquartile
df.longestexecutions <- filter(df.longestexecutions, totalRenderTime > mean(df.longestexecutions$totalRenderTime) + sd(df.longestexecutions$totalRenderTime))
df.longestexecutions
ggplot(data=df.longestexecutions, aes(x=hostname, y=totalRenderTime, group=1)) +
geom_line() +
geom_point() #+
ggplot(data=df.longestexecutions, aes(x=taskId, y=totalRenderTime, group=1)) +
geom_line()
summary(df.longestexecutions)
#taskId
ggplot(df.longestexecutions, aes(x=taskId, y=totalRenderTime)) +
geom_boxplot()  +
theme(axis.text.x = element_text(angle = 90))
df.longestexecutions %>% count(taskId)
df.longestexecutions %>% count(hostname)
summary(df.longestexecutions)
df.longestexecutions %>% count(jobId)
df.longestexecutions %>% count(taskId)
df.longestexecutions %>% count(hostname)
summary(df.longestexecutions)
arrange(df.longestexecutions, desc(totalRenderTime))
summary(gpu)
examine.df(task.x.y)
summary(task.x.y)
summary(df.longestexecutions)
#dome some feature engineering
renderTimeSd <- sd(df.execution$totalRenderTime)
upperQuartileValue <- mean(df.execution$totalRenderTime) + renderTimeSd
lowerQuartileValue <- mean(df.execution$totalRenderTime) - renderTimeSd
#get the upper quartile long renders
df.longrender <- select(filter(df.execution, totalRenderTime > upperQuartileValue),start,end,hostname,jobId,taskId,totalRenderTime)
#count by hostname
df.longrendercount <- df.longrender %>% count(hostname)
#longest hosts
longrendercountmean <- mean(df.longrendercount$n)
longrendercountsd <- sd(df.longrendercount$n)
longrenderupper <-longrendercountmean + longrendercountsd
df.longesthosts <- select(filter(df.longrendercount, n>=longrenderupper),hostname)
#complete the dataset for longest executions
df.longestexecutions <- merge(df.longesthosts, df.execution, by="hostname")
df.longestexecutions <- filter(df.longestexecutions, totalRenderTime > mean(df.longestexecutions$totalRenderTime) + sd(df.longestexecutions$totalRenderTime))
library('ProjectTemplate')
load.project()
df.exection <- cache('df.execution')
df.exection
library('ProjectTemplate')
load.project()
df.exection
library('ProjectTemplate')
load.project()
summary(gpu)
df.execution
library('ProjectTemplate')
load.project()
df.longestexecutions
summary(gpu)
df.longestexecutions
df.executionGPU = merge(df.longestexecutions, gpu, by.x=c('hostname', 'start'), by.y=c('hostname', 'timestamp'))
summary(executionGPU)
summary(df.executionGPU)
df.executionGPU
gpu
df.executionGPU = merge(df.longestexecutions, gpu, by.x=c('start'), by.y=c('timestamp'))
df.executionGPU
summary(df.executionGPU)
summary(gpu)
summary(df.longestexecutions)
summary(gpu)
summary(gpu)
gpu$starttime = sapply(gpu$starttime, function(i){
parse_date_time(i, orders="YmdHMS")
})
gpu$starttime = sapply(gpu$timestamp, function(i){
parse_date_time(i, orders="YmdHMS")
})
summary(gpu)
summary(df.longestexecutions)
select(df.longestexecutions, hostname)
unique(select(df.longestexecutions, hostname))
hosts
hosts <- unique(select(df.longestexecutions, hostname))
hosts
hosts <- unique(select(df.longestexecutions, hostname))
gpu <- right_join(gpu,hosts, by='hostname')
gpu
summary(gpu)
library('ProjectTemplate')
load.project()
summary(gpu)
summary(slim_gpu)
summary(gpu)
slim_gpu
hosts
summary(slim_gpu)
summary(gpu)
summary(slim_gpu)
slim_gpu <- left_join(hosts,gpu, by='hostname')
summary(slim_gpu)
summary(gpu)
slim_gpu$starttime = sapply(slim_gpu$timestamp, function(i){
parse_date_time(i, orders="YmdHMS")
})
summary(slim_gpu)
summary(gpu)
max(unique(gpu$hostname))
count(unique(gpu$hostname))
unique(gpu$hostname)
unique(df.longestexecutions$hostname)
unique(gpu$hostname)
summary(slim_gpu)
df.longestexecutions
summary(gpu)
summary(gpu)
gpu$starttime = sapply(gpu$timestamp, function(i){
parse_date_time(i, orders="YmdHMS")
})
summary(gpu)
head(gpu)
gpu$starttime = sapply(gpu$timestamp, function(i){
print(parse_date_time(i, orders="YmdHMS"))
})
gpu$starttime = sapply(gpu$timestamp, function(i){
x = parse_date_time(i, orders="YmdHMS")
})
head(gpu)
gpu$starttime
gpu$timestamp
select(gpu, timestamp, starttime)
gpu$starttime
df.longestexecutions
summary(df.longestexecutions)
tyepof(df.longestexecutions$start)
typeof(df.longestexecutions$start)
typeof(gpu$starttime)
head(select(gpu, timestamp, starttime))
for (row in 1:10) {
timestamp <- gpu[row, "timestamp"]
starttime  <- gpu[row, "starttime"]
print(timestamp)
print(starttime)
}
#for (row in 1:nrow(gpu)) {
for (row in 1:10) {
timestamp <- as.POSIXlt(gpu[row, "timestamp"])
starttime  <- gpu[row, "starttime"]
print(timestamp)
print(starttime)
}
#for (row in 1:nrow(gpu)) {
for (row in 1:10) {
timestamp <- gpu[row, "timestamp"]
timestamp <- as.POSIXlt(timestamp)
starttime  <- gpu[row, "starttime"]
print(timestamp)
print(starttime)
}
#for (row in 1:nrow(gpu)) {
for (row in 1:10) {
timestamp <- gpu[row, "timestamp"]
timestamp <- as.POSIXlt(timestamp)
starttime  <- gpu[row, "starttime"]
timestamp <- from_utc_timestamp(date_format(gpu[row, "timestamp"], "YYYY-MM-dd HH:mm:ss"), "GMT")
print(timestamp)
print(starttime)
}
#for (row in 1:nrow(gpu)) {
for (row in 1:10) {
timestamp <- from_utc_timestamp(date_format(gpu[row, "timestamp"], "YYYY-MM-dd HH:mm:ss"), "GMT")
print(timestamp)
print(starttime)
}
gpu$starttime
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:10) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
print(match)
}
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
print(match)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longhost)
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
print(match)
}
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longhost)
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
print(match$hostname)
print(match$timestamp)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
print(match$timestamp)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime == longstart)
print(match$timestamp)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime == longstart & starttime <= longend)
print(match$timestamp)
}
df.longestexecutions
gpu
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
print(match$timestamp)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:1) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
arrange(match, timestamp)
print(match$timestamp)
}
arrange(match, timestamp)
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:1) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
match <- arrange(match, timestamp)
print(match$timestamp)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:1) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
match <- arrange(match, timestamp) %>% filter(row_number()==1)
print(match$timestamp)
}
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
print(longstart)
print(longend)
#get matching gpu row
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
match <- arrange(match, timestamp) %>% filter(row_number()==1)
print(match$timestamp)
}
df.longestexecutions
gpu
df.longestexecutions$gpuSerial
df.longestexecutions
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddata[[i]] <- match
}
matcheddata = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddata[[i]] <- match
}
matcheddata = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:2) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddata[[row]] <- match
}
matcheddata
matcheddata = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddata[[row]] <- match
}
matcheddata
matcheddatalist = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddatalist[[row]] <- match
}
#merge the data frames
matcheddata <- big_data = do.call(rbind, matcheddatalist)
matcheddatalist = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddatalist[[row]] <- match
}
#merge the data frames
matcheddata <- do.call(rbind, matcheddatalist)
matcheddata
matcheddatalist = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
#add to the list
matcheddatalist[[row]] <- match
}
#merge the data frames
matcheddata <- do.call(rbind, matcheddatalist)
#merge with the source
df.longestexecutions <- merge(df.longestexecutions, matcheddata, by="hostname")
df.longestexecutions
matcheddata
df.longestexecutions
matcheddatalist = list()
#for (row in 1:nrow(df.longestexecutions)) {
for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
match <- arrange(match, timestamp) %>% filter(row_number()==1)
match$totalRenderTime = longhost <- df.longestexecutions[row, "totalRenderTime"]
#add to the list
matcheddatalist[[row]] <- match
}
#merge the data frames
df.longestGPU <- do.call(rbind, matcheddatalist)
df.longestGPU
gc()
library('ProjectTemplate')
load.project()
df.longestGPU
matcheddatalist
summary(gpu)
gpu$starttime
gpu$timestamp
df.longestexecutions
for (row in 1:nrow(df.longestexecutions)) {
#for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
#match <- arrange(match, timestamp) %>% filter(row_number()==1)
match$totalRenderTime = longhost <- df.longestexecutions[row, "totalRenderTime"]
#add to the list
matcheddatalist[[row]] <- match
}
gpu$starttime = sapply(gpu$timestamp, function(i){
x = parse_date_time(i, orders="YmdHMS")
})
matcheddatalist = list()
for (row in 1:nrow(df.longestexecutions)) {
#for (row in 1:3) {
#get the hostname, start and end
longhost <- df.longestexecutions[row, "hostname"]
longstart <- df.longestexecutions[row, "start"]
longend <- df.longestexecutions[row, "end"]
#get everything executed on that host in that timespan
match <- filter(gpu, hostname == longhost & starttime >= longstart & starttime <= longend)
#get the first executed job and assume thats the first task
#match <- arrange(match, timestamp) %>% filter(row_number()==1)
match$totalRenderTime = longhost <- df.longestexecutions[row, "totalRenderTime"]
#add to the list
matcheddatalist[[row]] <- match
}
gc()
library('ProjectTemplate')
load.project()
df.longestGPU
gpu$starttime
summary(gpu)
gpu$starttime = sapply(gpu$timestamp, function(i){
x = parse_date_time(i, orders="YmdHMS")
})
gpu$starttime
summary(gpu)
